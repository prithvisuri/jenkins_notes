
yum install git 
git - -version
--------------------------------------
**set config values

git config --global user.name “prithvi”
git config --global user.email “prithvisuri@gmail.com”
git config --global push.default simple
git config --global --list
git config --global color.ui “auto”
--------------------------------------
(cd /opt)mkdir name 
git init
add files....
git status
git add .
git commit -m "fafafaf"
git push -u origin master/branch-name
git pull origin master/branch-name
--------------------------------------
**git clone

git clone https://github.com/prithvisuri/SampleWebApp.git
git remote(to check remote repository)
git remote -v
git remote add origin https://github.com/prithvisuri/git-june2019.git
--------------------------------------
**to remove the changes in the working directory

git checkout -- <file> (to discard changes in working directorygit
git checkout -- . (this will remove all the changes in the file)
--------------------------------------
**to unstage (after add .)
git reset filename
git reset
git reset HEAD <filename>(to unstage the file from stageing area)
git rm --cached filename(to unstage the file from stageing area)
--------------------------------------
**to uncommit

git revert commitid(to revert the changes and will be commited):q (check git log)
git revert -n commitid(to uncommit and will be staging area) (check staging area)
git reset --hard commitid(will roll back to that id and will remove log id aswell)
--------------------------------------
**git branch 

git branch(to check branches)
git checkout branchname(change to the new branch)
git checkout -b branchname (will create new branch and move to new branch)
git merge branchname(to merge the branch)
git checkout -d branchname (will delete the branch)
--------------------------------------
git diff(to check the difference between working directory and the stageing area...working area)

git diff --staged(to check the difference between the files in staging area)

git difftool HEAD~2 HEAD~1(difference commit-ids, top commitid=head, ~1,~2,~3)
git difftool commitid1 commitid2
---------------------------------------
**git log

git log 
git log ~2
git log --online
git log --author="prithvi"
git log --grep "to find any file"
-----------------------------------------
**gitignore

touch gitignore
vi gitignore
*.py
*.txt .....

git commit 
-----------------------------------------
**git stash

git stash
git stash save "message"
git stash list
git stash show -p <stashid>
git stash drop <stashid>
gti stash drop
git stash pop
git stash pop <stashid>
-----------------------------------------
git commit --amend = to chanhe the message in last commit

git reset hard~1


-----------------------------------------

git log --author="ptihvi"


-----------------------------------------






-----------------------------------------



















